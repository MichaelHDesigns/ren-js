import BasicAdapter from "@renproject/sol/build/mainnet/BasicAdapter.json";
import GatewayLogic from "@renproject/sol/build/mainnet/GatewayLogicV1.json";
import GatewayRegistry from "@renproject/sol/build/mainnet/GatewayRegistry.json";
import RenBTC from "@renproject/sol/build/mainnet/RenBTC.json";
import { AbiItem } from "web3-utils";

import { CastNetwork, Contract } from "./network";

const networkID = 1;

// mintAuthority is generated by
// > utils.toChecksumAddress(utils.pubToAddress("... public key ...", true).toString("hex"))

export const renMainnet = CastNetwork({
    version: "1.0.0",
    name: "mainnet" as "mainnet",
    chain: "main",
    isTestnet: false,
    label: "Mainnet",
    chainLabel: "Mainnet",
    networkID,
    infura: "https://mainnet.infura.io",
    etherscan: "https://etherscan.io",
    addresses: {
        GatewayRegistry: {
            address: GatewayRegistry.networks[networkID].address,
            abi: GatewayRegistry.abi as AbiItem[],
            artifact: GatewayRegistry as Contract,
        },
        RenERC20: {
            abi: RenBTC.abi as AbiItem[],
            artifact: RenBTC as Contract,
        },
        Gateway: {
            abi: GatewayLogic.abi as AbiItem[],
            artifact: GatewayLogic as Contract,
        },
        BasicAdapter: {
            address: BasicAdapter.networks[networkID].address,
            abi: BasicAdapter.abi as AbiItem[],
            artifact: BasicAdapter as Contract,
        },
    },
});
